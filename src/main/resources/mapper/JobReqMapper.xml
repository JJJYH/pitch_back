<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.server.pitch.hire.mapper.JobReqMapper">
    <!-- JobReq resultMap -->
    <resultMap id="JobReqMap" type="JobReq">
        <id property="job_req_no" column="job_req_no"/>
        <result property="req_title" column="req_title"/>
        <result property="job_req_date" column="job_req_date"/>
        <result property="job_role" column="job_role"/>
        <result property="location" column="location"/>
        <result property="hire_num" column="hire_num"/>
        <result property="education" column="education"/>
        <result property="job_type" column="job_type"/>
        <result property="job_year" column="job_year"/>
        <result property="posting_type" column="posting_type"/>
        <result property="posting_period" column="posting_period"/>
        <result property="posting_start" column="posting_start"/>
        <result property="posting_end" column="posting_end"/>
        <result property="qualification" column="qualification"/>
        <result property="preferred" column="preferred"/>
        <result property="job_duties" column="job_duties"/>
        <result property="req_status" column="req_status"/>

        <!-- Users 객체 매핑 -->
        <collection property="users" javaType="Users">
            <id property="user_id" column="user_id"/>
            <result property="user_email" column="user_email"/>
            <result property="user_pw" column="user_pw"/>
            <result property="user_nm" column="user_nm"/>
            <result property="role" column="role"/>
            <result property="user_phone" column="user_phone"/>
            <result property="user_birth" column="user_birth"/>
        </collection>

        <collection property="department" javaType="Department">
            <id property="dept_no" column="dept_no"/>
            <result property="dept_name" column="dept_name"/>
            <result property="max_num" column="max_num"/>
        </collection>
    </resultMap>

    <select id="selectJobReqList" resultMap="JobReqMap">
        SELECT j.*, u.*
        FROM jobreq j
        JOIN users u ON j.user_id = u.user_id
        where u.role='hr'
        order by j.job_req_date desc, j.job_req_no desc;
    </select>

    <select id="selectJobReqStatusList" resultMap="JobReqMap">
        SELECT j.*, u.*
        FROM jobreq j
        JOIN users u ON j.user_id = u.user_id
        WHERE u.role='hr'
        <if test="selectedStatus != null and selectedStatus.size() > 0">
            AND j.req_status IN
            <foreach collection="selectedStatus" item="status" open="(" separator="," close=")">
                #{status}
            </foreach>
        </if>
        order by j.job_req_date desc, j.job_req_no desc;
    </select>

    <select id="selectJobReq" resultMap="JobReqMap">
        select *
        from jobreq
        where job_req_no = #{job_req_no}
    </select>

    
    <insert id="insertJobReq">
        <selectKey keyProperty="job_req_no" order="BEFORE" resultType="int">
            SELECT nextval(job_req_seq)
        </selectKey>

         INSERT INTO jobreq (job_req_no, user_id, req_title, job_req_date, job_role, location, hire_num, education, job_type,
                        job_year, posting_type, posting_period, posting_start, posting_end, qualification, preferred,
                        job_duties, req_status)
         VALUES (#{job_req_no}, #{users.user_id}, #{req_title}, #{job_req_date}, #{job_role}, #{location}, #{hire_num}, #{education},
                #{job_type}, #{job_year}, #{posting_type}, #{posting_period}, #{posting_start}, #{posting_end},
                 #{qualification}, #{preferred}, #{job_duties}, #{req_status})

    </insert>
    
    <delete id="deleteJobReq">
        delete from jobreq where job_req_no = #{job_req_no}
    </delete>

    <delete id="deleteJobReqList">
        delete from jobreq where req_status = '작성중' and job_req_no in
        <foreach collection="jobReqNo" item="jobReqNo" open="(" separator="," close=")">
            #{jobReqNo}
        </foreach>
    </delete>

    <update id="updateJobReq">
        UPDATE jobreq
        SET
            req_title = #{req_title},
            job_role = #{job_role},
            location = #{location},
            hire_num = #{hire_num},
            education = #{education},
            job_type = #{job_type},
            job_year = #{job_year},
            posting_type = #{posting_type},
            posting_period = #{posting_period},
            posting_start = #{posting_start},
            posting_end = #{posting_end},
            qualification = #{qualification},
            preferred = #{preferred},
            job_duties = #{job_duties},
            req_status = #{req_status}
        WHERE job_req_no = #{job_req_no}
    </update>


    <!--  날짜, 검색, 상태 별 조회 -->
    <select id="combinedSearchByThings" resultMap="JobReqMap">
        SELECT j.*, u.*
        FROM jobreq j
        JOIN users u ON j.user_id = u.user_id
        WHERE u.role = 'hr'
        <if test="searchKeyword != null and searchKeyword != ''">
            AND (j.req_title LIKE CONCAT('%', #{searchKeyword}, '%')
                 OR j.job_role LIKE CONCAT('%', #{searchKeyword}, '%'))
        </if>
        <if test="startDate != null and endDate != null">
            AND j.job_req_date BETWEEN #{startDate} AND date_add(#{endDate}, Interval 1 day)
        </if>
        <if test="selectedStatus != null and selectedStatus.size() > 0">
            AND j.req_status IN
            <foreach collection="selectedStatus" item="status" open="(" separator="," close=")">
                #{status}
            </foreach>
        </if>
        ORDER BY j.job_req_date DESC, j.job_req_no DESC;
    </select>


    <select id="selectUserWithDept" resultMap="JobReqMap">
        SELECT u.*, d.*
        FROM users u
                 JOIN department d ON u.dept_no = d.dept_no
        WHERE u.role = 'hr'
    </select>

    <insert id="insertInterviewer">
        INSERT INTO interviewer (job_req_no, user_id)
        VALUES (#{job_req_no}, #{interviewer_id})
    </insert>



</mapper>
